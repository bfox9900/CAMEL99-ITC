 \ FilesysX.hsf    Apr 8 2019
 \ *New: [PAB FNAME] is passed to DSRLNK on the Forth stack
 \       Removed PSHPAB POPPAB to save space. Only used once in the file

[CC] HEX

TARGET-COMPILING

\ VARIABLE: ^PAB            \ *moved to CAMEL kernel file

\ To save kernel space we are reading/writing VDP directly.
\ There is NO PAB duplicate in CPU RAM.

\ fast fetch of pab base pointer. (*This is also the OPCODE field)
CODE: [PAB   ( -- adr) TOS PUSH,  ^PAB @@ TOS MOV,  NEXT, END-CODE

\ PAB field words calculate offset from [PAB base in ** VDP RAM **
\ CODE is 16 BYTES smaller than Forth equivalent and faster
\ Trailing square bracket is to indicate they are used with [PAB
\ Read/write the PAB data fields with:  V@ V!  VC@ VC! VREAD VWRITE

\ Example:  [PAB FBUFF] V@   [PAB CHARS] VC@
\                                                                         data     size
 CODE: FLG]    ( vaddr -- vaddr') TOS INC,         NEXT, END-CODE \ 1+    byte      1
 CODE: FBUFF]  ( vaddr -- vaddr') TOS INCT,        NEXT, END-CODE \ 2+    cell      2
 CODE: RECLEN] ( vaddr -- vaddr') *TOS+ *TOS+ MOV, NEXT, END-CODE \ 4+    byte      1
 CODE: CHARS]  ( vaddr -- vaddr') TOS  5 ADDI,     NEXT, END-CODE \ 5+    byte      1
 CODE: REC#]   ( vaddr -- vaddr') TOS  6 ADDI,     NEXT, END-CODE \ 6+    cell      2
 CODE: STAT]   ( vaddr -- vaddr') TOS  8 ADDI,     NEXT, END-CODE \ 8+    byte      1
 CODE: FNAME]  ( vaddr -- vaddr') TOS  9 ADDI,     NEXT, END-CODE \ 9+    string    32

\ control the PAB stack
12C CONSTANT: PSZ       \ size of PAB+BUFFER

\ Removed these cuz only used once in INCLUDED
\ : PSHPAB  ( -- VDPadr) PSZ NEGATE ^PAB +! ;
\ : POPPAB  ( -- )              PSZ ^PAB +! ;

\ generic file error handler
: ?FILERR  ( ior -- )
           ?DUP IF  CR T." * File Err "  .  ABORT THEN ;

: VPLACE   ( $addr len Vaddr -- )  \ like PLACE, but for VDP RAM
           2DUP VC! 1+ SWAP VWRITE ;

\ it inits the pab to DV80 file format
: INITPAB  ( $addr len -- )
           [PAB 29 0 VFILL           \ *MUST* erase OLD PAB and file name
           14 [PAB FLG]    VC!       \ mode: input,display,variable
           50 [PAB RECLEN] VC!       \ 80 bytes/rec
           [PAB FNAME] DUP           \ -- addr len Vaddr Vaddr
           BL + [PAB FBUFF] V!       \ FBUFF=32 bytes past fname
           VPLACE                    \ write string to [PAB FNAME]
;

\ === HI LEVEL FUNCTIONS ====
[CC] HEX [TC]

: FILEOP  ( opcode -- err)           \ TI99 O/S call
           PAUSE                     \ better multi-tasking
          [PAB VC!                   \ write opcode byte to VDP PAB
          [PAB ( -- vaddr)
          \ *CRITICAL* must clear ERR code bits in PAB
           DUP FLG] DUP VC@ 1F AND SWAP VC!
           FNAME] DSRLNK ( -- err)   \ DSRLINK with parameter
;

\ VARIABLE: LINES                            \ moved to Kernel

: ?FILE ( n -- ) 0= TS" Filename" ?ABORT ;   \ tests string length only

\ see E/A Manual page 298 for meaning
: FSTAT ( -- c)  9 FILEOP DROP [PAB STAT] VC@ ;
: (EOF) ( -- ?)  FSTAT 3 AND ;   \ End of file test, current PAB

\ This word can bootstrap the system on startup.
\ INCLUDED is nestable. Saves all state info
\ and allocates a new PAB in VDP RAM and a RAM buffer in the HEAP
\ Cross-compiler usage: TS" DSK1.START" INCLUDED

: INCLUDED  ( caddr len -- )
           DUP ?FILE
           CR T." Loading: " 2DUP TYPE
           LINES OFF
           SOURCE-ID @ >IN @ 2>R           \ save source-ID, input pointer
           PSZ NEGATE ^PAB +!              \ make new PAB pab stack
           INITPAB                         
           0 FILEOP ?FILERR                \ open new file (sets new DSRNAM)
           SOURCE-ID 1+!                   \ incr. source ID (1st file is 1)

           52 DUP MALLOC >R                \ get a buffer pointer
           BEGIN
             (EOF) 0=                      \ eof test
           WHILE                           \ while err=0
             2 FILEOP ?FILERR              \ read a record,closes file if EOF
            [PAB CHARS] VC@                \ get the #chars read
            [PAB FBUFF] V@ R@ 2 PICK VREAD  \ read VDP fbuff to malloc buffer
             R@ SWAP INTERPRET             \ interpret addr,len on stack
             LINES 1+!                     \ count the line
           REPEAT
           R> DROP                         \ drop buffer address from rstack
     ( 52) MFREE                           \ release the buffer memory
           1 FILEOP ?FILERR                \ close the file
           PSZ ^PAB +!                     \ remove PAB from pab stack
           2R> >IN !  SOURCE-ID !          \ restore >IN, SOURCE-ID
;
