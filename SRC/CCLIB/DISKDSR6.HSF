\ DISK only DSRLINK   VERSION 2                BJF MAR 20 2018

\ Aug 2018 replaced literal $20 with CONSTANT BL to save space

\ Overview:
\ This file provides a way to CALL code in the DSR ROM.
\ R9 of the GPL workspace is loaded directly with the entry address
\ for the DSR code that you are calling.
\ USAGE:   DSKLNK BLWP  **notice DSK LNK not  DSR LNK**


\ This 32 byte workspace is only needed to give us
\ a way to return to Forth.  Sad :-(

TARGET-COMPILING
\ take 32 bytes of the data stack and use for DSRWSP
[CC] SP0 100 - [TC] VALUE: DSRWKSP

\ ========================================================
               [CC] [PUBLIC] [TC]

\ May 12, 2018 simplified this with CREATE:
\ This is the code used to CALL the DSR ROM code
CREATE: CALLDSR ( -- )       \ makes a label for this code
             83E0 LWPI,      \ change to GPL workspace
            *R9 BL,          \ GPL R9 already has the entry address
             NOP,            \ This normally has DATA 8 in it. :-)
             DSRWKSP LWPI,   \ back to the dummy workspace
             RTWP,           \ Return to Forth
             NEXT,

\ Create the VECTOR that we call with BLWP.
\               workspace    compile program address
\               ---------    -----------------------
CREATE: DSKLNK  DSRWKSP T,   CALLDSR T,

\ ========================================================

\                 [CC] [PRIVATE] [TC]
 \ Define PAB constants
[CC] HEX [TC]
 1100 CONSTANT: DSKCARD   \ No need to scan for the Floppy DISK CARD. It's here
 4000 CONSTANT: 'ID       \ DSR ROM header addresses
 4008 CONSTANT: 'DSRLIST

\ Create the DSR card scanner
[CC] HEX [TC]
                [CC] [PUBLIC] [TC]

: /DOT    ( caddr len -- caddr len')  \ cut string at the dot
           2DUP T[CHAR] . SCAN NIP -  ;

\ : >DSR$   ( link -- $) 4 +  ;       \ add 4 to the link gets to the DSR$

: =$ ( $1 $2 -- flag) OVER C@ 1+ S= 0= ; \ compare 2 counted strings

\ DSRFIND searches for a matching device NAME in the DSR ROM starting at ROMLIST
\ It returns the link-address. (Link-address+2 = runnable code address)
: DSRFIND ( addr len ROMLIST -- link_addr)
           -ROT                        \ save the ROM list for later
     ( $20) BL MALLOC >R               \ get a temp$ buffer >20 bytes
           /DOT  R@ PLACE              \ cut filename at dot, place in temp$
           BEGIN
              @                        \ fetch the next link
              DUP 0=                   \ test for end of list
              SWAP  R@ OVER 4 +  =$    \ match TEMP$ to $ in ROM
              ROT OR                   \ if either is true we're done.
           UNTIL
           BL MFREE                    \ release 20 bytes to heap
           R> DROP ;                   \ free the heap

\ card control lexicon
: Enable   ( CRU -- )
           CRU@ OVER <>                \ is this a different card?
           IF   0SBZ                   \ if so, turn it off
           THEN CRU! 0SBO ;            \ then turn on the requested card

: Disable  ( CRU -- ) CRU! 0SBZ ;

