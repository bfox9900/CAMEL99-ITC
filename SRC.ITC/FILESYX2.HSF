 \ FilesyX2.hsf                                              Apr 10 2021  Fox
 \ *New: [PAB FNAME] is passed to DSRLNK on the Forth stack
 \ Added FOPEN and FGET, common factors for ANS files

[CC] HEX [TC]

\ VARIABLE ^PAB            \ *moved to CAMEL kernel file

\ To save kernel space we are reading/writing VDP directly using Forth words
\ There is NO PAB duplicate in CPU RAM.

\ fast fetch of pab base pointer. (*This is also the OPCODE field)
CODE [PAB   ( -- adr) TOS PUSH,  ^PAB @@ TOS MOV,  NEXT, ENDCODE

\ PAB field words calculate offset from [PAB base in ** VDP RAM **
\ CODE is 16 BYTES smaller than Forth equivalent and faster
\ Trailing square bracket is to indicate they are used with [PAB
\ Read/write the PAB data fields with:  V@/V!  VC@/VC! VREAD/VWRITE

\ Example:  [PAB FBUFF] V@   [PAB CHARS] VC@
\                                                                       data     size
 CODE FLG]    ( vaddr -- vaddr') TOS INC,         NEXT, ENDCODE \ 1+   byte      1
 CODE FBUFF]  ( vaddr -- vaddr') TOS INCT,        NEXT, ENDCODE \ 2+   cell      2
 CODE RECLEN] ( vaddr -- vaddr') *TOS+ *TOS+ MOV, NEXT, ENDCODE \ 4+   byte      1
 CODE CHARS]  ( vaddr -- vaddr') TOS  5 ADDI,     NEXT, ENDCODE \ 5+   byte      1
 CODE REC#]   ( vaddr -- vaddr') TOS  6 ADDI,     NEXT, ENDCODE \ 6+   cell      2
 CODE STAT]   ( vaddr -- vaddr') TOS  8 ADDI,     NEXT, ENDCODE \ 8+   byte      1
 CODE FNAME]  ( vaddr -- vaddr') TOS  9 ADDI,     NEXT, ENDCODE \ 9+   string    32

\ control the PAB stack
[CC] HEX [TC]
12C CONSTANT PSZ       \ size of PAB+BUFFER

\ generic file error handler
: ?FILERR  ( ior -- )
           ?DUP IF CR CR T." * File Err #" .  ABORT THEN ;


: VPLACE   ( $addr len Vaddr -- )  \ PLACE stack string in VDP RAM
           2DUP VC! 1+ SWAP VWRITE ;

\ === High Level File functions ====
[CC] HEX [TC]
: FILEOP  ( opcode -- err)           \ TI99 O/S call
         PAUSE                       \ better multi-tasking
        [PAB VC!                     \ write opcode byte to VDP PAB
        [PAB DUP FLG] DUP VC@ 1F AND SWAP VC! \ *CRITICAL* clear ERR code bits
        ( Vaddr) FNAME] DSRLNK ( -- err)      \ DSRLINK with parameter
;

\ primitive file open sets up PAB with given arguments
: FOPEN ( $addr len rec-size fam -- err)
          [PAB BL  0 VFILL          \ erase PAB ( 32 bytes)
          [PAB FLG]    VC!          \ set file access mode
          [PAB RECLEN] VC!          \ set bytes/rec
          [PAB FNAME] DUP           \ -- addr len Vaddr Vaddr
          020 + [PAB FBUFF] V!       \ FBUFF=32 bytes past fname
          VPLACE                    \ write string to [PAB FNAME]
          0 FILEOP                  \ open the file, return err code
;

: ?FILE ( n -- ) DUP 0= TS" Filename" ?ABORT ;   \ tests string length only

\ *G see E/A Manual page 298 for meaning of PAB status field
: FSTAT ( -- c)  9 FILEOP DROP [PAB STAT] VC@ ;

: FGET  ( buffer -- len ) \ read PABbuffer->CPU ram, returns length
         [PAB FBUFF] V@ SWAP [PAB CHARS] VC@  DUP>R  VREAD R> ;

\ *G INCLUDED can bootstrap the system on startup. It is nestable.
\ ** Saves all state info and allocates a new PAB in VDP RAM
\ ** and a RAM buffer in the HEAP
\ Cross-compiler usage: TS" DSK1.START" INCLUDED
: INCLUDED  ( caddr len -- )
           ?FILE
           CR T." Loading: " 2DUP TYPE
           SOURCE-ID @ >IN @ 2>R           \ save source-ID, input pointer
           PSZ NEGATE ^PAB +!              \ make new PAB, on pab stack
           ( $ len ) 50 14 FOPEN ?FILERR   \ OPEN as 80 FIXED DV80 INPUT
           SOURCE-ID 1+!                   \ incr. source ID (1st file is 1)
           LINES OFF                       \ reset the line counter
           BEGIN
             2 FILEOP 0=                   \ file read operation
           WHILE
             RP0 100 - DUP FGET            \ use memory below RSTACK
        ( -- addr len ) INTERPRET          \ interpret the buffer
             LINES 1+!                     \ count the line
           REPEAT
           PSZ ^PAB +!                     \ remove PAB from pab stack
           2R> >IN !  SOURCE-ID !          \ restore >IN, SOURCE-ID
;
