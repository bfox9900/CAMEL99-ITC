\ TICKTOCK.HSF  TMS9901 hardware timer interface for Camel 99 Forth

\ credit to: http://www.unige.ch/medecine/nouspikel/ti99/tms9901.htm#Timer
\ impovements based on code from Tursi Atariage
\ TMR! now loads from the Forth stack
\ Jan 31, 2021 simplified JIFFS

\ timer resolution:  64 clock periods, thus 64*333 = 21.3 microseconds
\ Max Duration    :  ($3FFF) 16383 *64*333 ns = 349.2 milliseconds

CROSS-ASSEMBLING
[CC] DECIMAL [TC]
CODE: TMR!   ( n -- )         \ load TMS9901 timer from stack
             0 LIMI,
             R12 CLR,        \ CRU addr of TMS9901 = 0
             0   SBO,        \ SET bit 0 to 1, Enter timer mode
             R12 INCT,       \ CRU Address of bit 1 = 2 , I'm not kidding
             TOS 14 LDCR,    \ Load 14 BITs from TOS into timer
            -1  SBZ,         \ reset bit 0, Exits clock mode, starts decrementer
             2 LIMI,
             TOS POP,
             NEXT,
             END-CODE

CODE: TMR@   ( -- n)         \ read the TMS9901 timer
             0 LIMI,
             TOS PUSH,
             R12 2 LI,      \ cru = 1 (honest, 2=1)
            -1 SBO,         \ SET bit 0 TO 1, Enter timer mode
             TOS 14 STCR,   \ READ TIMER (14 bits)
            -1 SBZ,         \ RESET bit 1, exit timer mode
             2 LIMI,
             NEXT,
             END-CODE

TARGET-COMPILING

 CODE: |-| ( x y -- x n )    \ : |-|   OVER - ABS ;
            *SP TOS SUB,
             TOS    ABS,    \ get ABS of subtraction
             NEXT,
             END-CODE

\ Because JIFFS are 1/60 seconds, there is a lot of time while PAUSE
\ switches to all the tasks.
\ JIFFS give finest resolution for delays
: JIFFS ( n -- )
        0 ?DO
            TMR@
            BEGIN
              PAUSE
              TMR@ |-| 685 >
            UNTIL
            DROP
        LOOP ;

\ MS resolution limited to 1/60 second and minimum is 1/60 sec.
: MS  ( n -- )  4 RSHIFT JIFFS ;  \ MS/16 = JIFFS

[CC] HEX [TC]
