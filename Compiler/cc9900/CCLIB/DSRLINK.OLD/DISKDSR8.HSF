\ DISK only DSRLINK   VERSION 2                BJF MAR 20 2018
\ Aug 2018 replaced literal $20 with CONSTANT BL to save space

\ Overview:
\ This file provides a way to CALL code in the DSR ROM.
\ R9 of the GPL workspace is loaded directly with the entry address
\ for the DSR code that you are calling.
\ USAGE:   DSKLNK BLWP  **notice DSK LNK not  DSR LNK**

TARGET-COMPILING
\ Steal top address of the data stack and use for DSRWSP.
\ We in fact only use 6 bytes.
\ This workspace is only needed to isolate the Forth
\ workspace from the DSR workspace.

\                 [CC] [PRIVATE] [TC]
\ Define PAB constants
[CC] HEX [TC]
 1100 CONSTANT: DSKCARD   \ No need to scan for the Floppy DISK CARD. It's here
 4000 CONSTANT: 'ID       \ DSR ROM header addresses
 4008 CONSTANT: 'DSRLIST
      VARIABLE: RCODE     \ hold ROM code entry address
\      VARIABLE: DLEN     \ holds dev string length

[CC] SP0 100 - [TC] VALUE: DSRWKSP
 \           8356 CONSTANT: DSRNAM     \ protected address in TI-99 O/S
\ ========================================================

               [CC] [PUBLIC] [TC]
\ Sept 7, 2018 simplified this by incorporating vector with code
\ This is the ONLY code used to CALL the DSR ROM code

\ Create the VECTOR that we call with BLWP.
\               workspace    compile program address
\               ---------    -----------------------
CREATE: DSKLNK  DSRWKSP T,  [cc] THERE TCELL + T, [tc]
             0 LIMI,
             837C @@ CLR,     \ clr GPL status flag
             83E0 LWPI,       \ change to GPL workspace
             8354 0004 LI,
             R12 DSKCARD CMPI,
             NE IF,
                0 SBZ,
             ENDIF,
             R12 DSKCARD LI,  \ card address -> GPL R12
             0 SBO,           \ turn on the card
             RCODE @@ R9 MOV,
            *R9 BL,           \ branch to ROM code
             @@1 JMP,         \ on error DSR returns here

             0 SBZ,           \ on success turn off card
             8356 @@ CLR,
             DSRWKSP LWPI,    \
             2 LIMI,
             RTWP,            \ Return to Forth Workspace
             NEXT,

@@1:         0 SBZ,           \ TROUBLE! turn off card
             DSRWKSP LWPI,    \ to DSRWKSPACE
             BEGIN,
                 R0 INC,      \ shows in the debugger
             AGAIN,           \ loop forever halts program

\ ========================================================
\ Create the DSR card scanner
[CC] HEX [TC]
           [CC] [PUBLIC] [TC]

: /DOT    ( caddr len -- caddr len')  \ cut string at the dot
           2DUP T[CHAR] . SCAN  NIP -  ;

\ : >DSR$   ( link -- $) 4 +  ;       \ add 4 to the link gets to the DSR$

: =$ ( $1 $2 -- flag) OVER C@ 1+ S= 0= ; \ compare 2 counted strings

\ DSRFIND searches for a matching device NAME in the DSR ROM starting at ROMLIST
\ It returns the link-address. (Link-address+2 = runnable code address)
: DSRFIND ( addr len ROMLIST -- link_addr)
           -ROT                        \ save the ROM list for later
     ( $20) BL MALLOC >R               \ get a temp$ buffer >20 bytes
           /DOT  R@ PLACE              \ cut filename at dot, place in temp$
           BEGIN
              @ DUP 83D2 !             \ fetch the next link
              DUP 0=                   \ test for end of list
              SWAP  R@ OVER 4 +  =$    \ match TEMP$ to $ in ROM
              ROT OR                   \ if either is true we're done.
           UNTIL
           BL MFREE                    \ release 20 bytes to heap
           R> DROP ;                   \ free the heap

-1 [IF]

CODE: Enable ( CRU -- )       \ CODE versions, NO need for CRUSMALL library
              TOS R12 CMP,
              NE IF,
                   0 SBZ,
              ENDIF,
              TOS R12 MOV,
              0 SBO,
              TOS POP,
              NEXT,
              END-CODE

CODE: Disable ( CRU -- )
              TOS R12 MOV,
              0 SBZ,
              TOS POP,
              NEXT,
              END-CODE

[ELSE]

\ card control lexicon
: Enable   ( CRU -- )
           CRU@ OVER <>             \ is this a different card?
           IF   0SBZ                \ if so, turn it off
           THEN DUP
                CRU! 0SBO
                83D0 ! ;            \ then turn on the requested card

: Disable  ( CRU -- )  83D0 OFF  CRU! 0SBZ ;

[THEN]
