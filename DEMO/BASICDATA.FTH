\ BASIC DATA STATEMENT READER JUNE 2021  Brian Fox

NEEDS .S   FROM DSK1.TOOLS
NEEDS CALLCHAR FROM DSK1.GRAFIX

: QUOTE?  ( addr len -- addr len ? ) OVER C@ [CHAR] " = ;

\ cut leading quote char and last quote char
: /QUOTES ( addr len -- addr' len')  1 /STRING   1-  ;

: GET-TOKEN ( -- addr len) [CHAR] , PARSE-WORD ; \ comma delimited

: EXPECT# ( addr len -- n)
      BL SKIP                           \ skip leading spaces
      NUMBER? ABORT" Number expected" ; \ convert string to no,

: EXPECT$ ( addr len -- addr len)
      QUOTE? 0= ABORT" String expected" \ test for leading quote
      /QUOTES ;

: DATA ( <TEXT>,<TEXT> ... )
        DROP    \ don't need the line number
         BEGIN
             GET-TOKEN DUP
         WHILE
            EXPECT# GET-TOKEN EXPECT$
            ROT CALLCHAR
         REPEAT
         2DROP ;

DECIMAL

\ REM CHARACTER DATA
500 DATA 33,"0010101010001000",34,"0024240000000000",35,"00247E24247E2400",36,"00083E283E0A3E08"
510 DATA 37,"0062640810264600",38,"001028102A443A00",39,"0008100000000000",40,"0004080808080400"
520 DATA 41,"0020101010102000",42,"000014083E081400",43,"000008083E080800",44,"0000000000080810"
530 DATA 45,"000000003E000000",46,"0000000000181800",47,"0000020408102000",48,"003C464A52623C00"
540 DATA 49,"0018280808083E00",50,"003C42023C407E00",51,"003C420C02423C00",52,"00081828487E0800"
550 DATA 53,"007E407C02423C00",54,"003C407C42423C00",55,"007E020408101000",56,"003C423C42423C00"
560 DATA 57,"003C42423E023C00",58,"0000001000001000",59,"0000100000101020",60,"0000040810080400"
570 DATA 61,"0000003E003E0000",62,"0000100804081000",63,"003C420408000800",64,"003C4A565E403C00"
580 DATA 65,"003C42427E424200",66,"007C427C42427C00",67,"003C424040423C00",68,"0078444242447800"
590 DATA 69,"007E407C40407E00",70,"007E407C40404000",71,"003C42404E423C00",72,"0042427E42424200"
600 DATA 73,"003E080808083E00",74,"0002020242423C00",75,"0044487048444200",76,"0040404040407E00"
610 DATA 77,"0042665A42424200",78,"004262524A464200",79,"003C424242423C00",80,"007C42427C404000"
620 DATA 81,"003C4242524A3C00",82,"007C42427C444200",83,"003C403C02423C00",84,"00FE101010101000"
630 DATA 85,"0042424242423E00",86,"0042424242241800",87,"00424242425A2400",88,"0042241818244200"
640 DATA 89,"0082442810101000",90,"007E040810207E00",91,"000E080808080E00",92,"0000402010080400"
650 DATA 93,"0070101010107000",94,"0010385410101000",96,"001C227820207E00",97,"000038043C443E00"
660 DATA 98,"0020203C22223C00",99,"00001C2020201C00",100,"0004043C44443E00",101,"0000384478403C00"
670 DATA 102,"000C101810101000",103,"00003C44443C0438",104,"0040407844444400",105,"0010003010103800"
680 DATA 106,"0004000404042418",107,"0020283030282400",108,"0010101010100C00",109,"0000685454545400"
690 DATA 110,"0000784444444400",111,"0000384444443800",112,"0000784444784040",113,"00003C44443C0406"
700 DATA 114,"00001C2020202000",115,"0000384038047800",116,"0010381010100C00",117,"0000444444443C00"
710 DATA 118,"0000444428281000",119,"0000445454542800",120,"0000442810284400",121,"00004444443C0438"
720 DATA 122,"00007C0810207C00",123,"000E083030080E00",124,"0008080808080800",125,"0070100C0C107000"
730 DATA 126,"00324C0000000000"
