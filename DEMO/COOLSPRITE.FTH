\ EXTENDED BASIC to CAMEL99 Forth demo BJFox 2019
\ Source:  Smart Programming Guide for Sprites
\          by Craig Miller
\          (c) 1983 by Miller Graphics
\ 100 CALL CLEAR
\ 110 CALL SCREEN(2)
\ 120 CALL CHAR(46,"0000001818")
\ 130 CALL SPRITE(#2,94,16,180,1,0,5)
\ 140 FOR N=0 TO 25
\ 150     X=RND*192+1
\ 160     Y=RND*255+1
\ 170     CALL SPRITE(#3,65+N,16,Y/2+1,X+1)
\ 180     CALL SOUND(-60,660,8)
\ 190     CALL POSITION(#3,Y,X,#2,R,C)
\ 200     CALL SPRITE(#1,46,16,R,C,(Y-R)*.49,(X-C)*.49)
\ 210     CALL SOUND(476,-3,14)
\ 220     CALL SOUND(120,110,6)
\ 230     CALL DELSPRITE(#1)
\ 240     CALL PATTERN(#3,35)
\ 250     CALL SOUND(100,220,6)
\ 260 NEXT N
\ 270 GOTO 140

NEEDS .S     FROM DSK1.TOOLS
NEEDS MOTION FROM DSK1.AUTOMOTION
NEEDS RND    FROM DSK1.RANDOM
NEEDS DB     FROM DSK1.SOUND

VARIABLE X
VARIABLE Y
VARIABLE RR
VARIABLE CC

CREATE ABULLET HEX 0000 , 0018 , 1800 , 0000 ,

: DELSPRITE ( spr# -- ) 0 SWAP SP.PAT VC! ;

DECIMAL
\ name sprites and colors for convenience
 1 CONSTANT AMMO    2 CONSTANT TURRET   3 CONSTANT TARGET
 2 CONSTANT BLACK   5 CONSTANT BLUE    16 CONSTANT WHITE

\ functions to assist translation from BASIC 
: (Y-RR)/2  ( -- n)  Y @ RR @ -  2/ ;
: (X-CC)/2  ( -- n)  X @ CC @ -  2/ ;
: SOUND1   ( t Hz db -- ) GEN1  DB  HZ  MS  MUTE  ;
: ?BREAK   ?TERMINAL IF  STOPMOTION CR ." BREAK"  ABORT  THEN ;


: RUN
( 100) CLEAR
( 110) BLUE SCREEN   10 0 AT-XY ." Camel99 Forth"
( 120) ABULLET [CHAR] . CHARDEF
( 130) [CHAR] ^   WHITE 180  1  TURRET SPRITE   
       5 0 TURRET MOTION
       AUTOMOTION

( 140) BEGIN 
        25 0 DO
( 150)    192 RND 1+ Y !
( 160)    255 RND 1+ X !
( 170)    [CHAR] A I +  WHITE   X @ 1+  Y @ 2/   TARGET SPRITE
( 180)    660 8 50 SOUND1
( 190)    TARGET POSITION X ! Y !    TURRET POSITION  CC !  RR ! 
( 200)    [CHAR] . WHITE RR @ CC @  AMMO SPRITE  
          (Y-RR)/2 (X-CC)/2 AMMO MOTION
( 210)    2 NOISE -14 DB 430 MS MUTE
( 220)    120 110 -6 SOUND1 
( 230)    AMMO DELSPRITE
( 240)    [CHAR] # 3 PATTERN
( 250)    100 220 -6 SOUND1
          ?BREAK 
( 260)   LOOP
( 270) AGAIN ;

